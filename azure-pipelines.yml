# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

parameters:
  - name: succeed
    displayName: Succeed or fail
    type: boolean
    default: false

trigger:
  - main
  - releases/*
pr:
  - main
  - releases/*

pool:
  name: local

jobs:
  - job: Test
    strategy:
      matrix:
        Python38:
          python.version: "3.8"
        Python39:
          python.version: "3.9"
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: "$(python.version)"
        displayName: "Use Python $(python.version)"

      - script: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        displayName: "Install dependencies"

      - script: |
          pip install pytest pytest-azurepipelines
          pytest
        displayName: "pytest"

  - job: FailNow
    dependsOn: Test
    steps:
      - script: git clone malformed input
        condition: eq(${{ parameters.succeed }}, false)

  - job: ErrorHandler
    dependsOn: FailNow
    condition: failed()
    steps:
      - bash: |
          az boards work-item create \
            --title "Build $(build.buildNumber) failed" \
            --type bug \
            --org $(System.TeamFoundationCollectionUri) \
            --project $(System.TeamProject)
        env:
          AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)
        displayName: "Create work item on failure"
